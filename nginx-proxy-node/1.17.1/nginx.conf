events {}

http {
  # NGINX will handle gzip compression of responses from the app server
  gzip on;
  gzip_proxied any;
  gzip_types application/javascript application/json text/css;
  gzip_min_length 1000;
  server_tokens off;

  log_format json '{ "timestamp": "$time_iso8601", '
    '"host": "$host", '
    '"pid": "$pid", '
    '"remote_addr": "$realip_remote_addr", '
    '"remote_user": "$remote_user", '
    '"body_bytes_sent": "$body_bytes_sent", '
    '"request_time": "$request_time", '
    '"status": "$status", '
    '"request": "$request", '
    '"request_method": "$request_method", '
    '"request_uri": "$request_uri", '
    '"http_referrer": "$http_referer", '
    '"http_user_agent": "$http_user_agent" }';

  access_log  /var/log/nginx/access.log  json;

  server {
    listen 3000;

    location / {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass http://app:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }
  }
}
